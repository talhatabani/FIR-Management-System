<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="backbtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>